//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18444 版自动生成。
// 
#pragma warning disable 1591

namespace ArticleApplication.WebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback selectDatasOperationCompleted;
        
        private System.Threading.SendOrPostCallback isDuZhanOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteSqlTranOperationCompleted;
        
        private System.Threading.SendOrPostCallback isTableNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback isTableName_URLOperationCompleted;
        
        private System.Threading.SendOrPostCallback desTaskUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback desTaskTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback isHaveFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerFileLengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveUpLoadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback FileInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpLoadUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback ECCrawlerOKOperationCompleted;
        
        private System.Threading.SendOrPostCallback ECCrawlerISOperationCompleted;
        
        private System.Threading.SendOrPostCallback ECCrawlerDelOperationCompleted;
        
        private System.Threading.SendOrPostCallback ECUrlCrawlerOKOperationCompleted;
        
        private System.Threading.SendOrPostCallback ECUrlCrawlerISOperationCompleted;
        
        private System.Threading.SendOrPostCallback ECUrlCrawlerDelOperationCompleted;
        
        private System.Threading.SendOrPostCallback ECCrawlerINITOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerFileLength_PicOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveUpLoadFile_PicOperationCompleted;
        
        private System.Threading.SendOrPostCallback jyRarOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::ArticleApplication.Properties.Settings.Default.ArticleApplication_WebService_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event selectDatasCompletedEventHandler selectDatasCompleted;
        
        /// <remarks/>
        public event isDuZhanCompletedEventHandler isDuZhanCompleted;
        
        /// <remarks/>
        public event ExecuteSqlTranCompletedEventHandler ExecuteSqlTranCompleted;
        
        /// <remarks/>
        public event isTableNameCompletedEventHandler isTableNameCompleted;
        
        /// <remarks/>
        public event isTableName_URLCompletedEventHandler isTableName_URLCompleted;
        
        /// <remarks/>
        public event desTaskUrlCompletedEventHandler desTaskUrlCompleted;
        
        /// <remarks/>
        public event desTaskTaskCompletedEventHandler desTaskTaskCompleted;
        
        /// <remarks/>
        public event isHaveFileCompletedEventHandler isHaveFileCompleted;
        
        /// <remarks/>
        public event GetServerFileLengthCompletedEventHandler GetServerFileLengthCompleted;
        
        /// <remarks/>
        public event SaveUpLoadFileCompletedEventHandler SaveUpLoadFileCompleted;
        
        /// <remarks/>
        public event FileInsertCompletedEventHandler FileInsertCompleted;
        
        /// <remarks/>
        public event UpLoadUrlCompletedEventHandler UpLoadUrlCompleted;
        
        /// <remarks/>
        public event ECCrawlerOKCompletedEventHandler ECCrawlerOKCompleted;
        
        /// <remarks/>
        public event ECCrawlerISCompletedEventHandler ECCrawlerISCompleted;
        
        /// <remarks/>
        public event ECCrawlerDelCompletedEventHandler ECCrawlerDelCompleted;
        
        /// <remarks/>
        public event ECUrlCrawlerOKCompletedEventHandler ECUrlCrawlerOKCompleted;
        
        /// <remarks/>
        public event ECUrlCrawlerISCompletedEventHandler ECUrlCrawlerISCompleted;
        
        /// <remarks/>
        public event ECUrlCrawlerDelCompletedEventHandler ECUrlCrawlerDelCompleted;
        
        /// <remarks/>
        public event ECCrawlerINITCompletedEventHandler ECCrawlerINITCompleted;
        
        /// <remarks/>
        public event GetServerFileLength_PicCompletedEventHandler GetServerFileLength_PicCompleted;
        
        /// <remarks/>
        public event SaveUpLoadFile_PicCompletedEventHandler SaveUpLoadFile_PicCompleted;
        
        /// <remarks/>
        public event jyRarCompletedEventHandler jyRarCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/selectDatas", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable selectDatas(string sql) {
            object[] results = this.Invoke("selectDatas", new object[] {
                        sql});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void selectDatasAsync(string sql) {
            this.selectDatasAsync(sql, null);
        }
        
        /// <remarks/>
        public void selectDatasAsync(string sql, object userState) {
            if ((this.selectDatasOperationCompleted == null)) {
                this.selectDatasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectDatasOperationCompleted);
            }
            this.InvokeAsync("selectDatas", new object[] {
                        sql}, this.selectDatasOperationCompleted, userState);
        }
        
        private void OnselectDatasOperationCompleted(object arg) {
            if ((this.selectDatasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectDatasCompleted(this, new selectDatasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isDuZhan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isDuZhan() {
            object[] results = this.Invoke("isDuZhan", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isDuZhanAsync() {
            this.isDuZhanAsync(null);
        }
        
        /// <remarks/>
        public void isDuZhanAsync(object userState) {
            if ((this.isDuZhanOperationCompleted == null)) {
                this.isDuZhanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisDuZhanOperationCompleted);
            }
            this.InvokeAsync("isDuZhan", new object[0], this.isDuZhanOperationCompleted, userState);
        }
        
        private void OnisDuZhanOperationCompleted(object arg) {
            if ((this.isDuZhanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isDuZhanCompleted(this, new isDuZhanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecuteSqlTran", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExecuteSqlTran(object[] SQLStringList, string cjTable) {
            object[] results = this.Invoke("ExecuteSqlTran", new object[] {
                        SQLStringList,
                        cjTable});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteSqlTranAsync(object[] SQLStringList, string cjTable) {
            this.ExecuteSqlTranAsync(SQLStringList, cjTable, null);
        }
        
        /// <remarks/>
        public void ExecuteSqlTranAsync(object[] SQLStringList, string cjTable, object userState) {
            if ((this.ExecuteSqlTranOperationCompleted == null)) {
                this.ExecuteSqlTranOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteSqlTranOperationCompleted);
            }
            this.InvokeAsync("ExecuteSqlTran", new object[] {
                        SQLStringList,
                        cjTable}, this.ExecuteSqlTranOperationCompleted, userState);
        }
        
        private void OnExecuteSqlTranOperationCompleted(object arg) {
            if ((this.ExecuteSqlTranCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteSqlTranCompleted(this, new ExecuteSqlTranCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isTableName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isTableName(string cjTable) {
            object[] results = this.Invoke("isTableName", new object[] {
                        cjTable});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isTableNameAsync(string cjTable) {
            this.isTableNameAsync(cjTable, null);
        }
        
        /// <remarks/>
        public void isTableNameAsync(string cjTable, object userState) {
            if ((this.isTableNameOperationCompleted == null)) {
                this.isTableNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisTableNameOperationCompleted);
            }
            this.InvokeAsync("isTableName", new object[] {
                        cjTable}, this.isTableNameOperationCompleted, userState);
        }
        
        private void OnisTableNameOperationCompleted(object arg) {
            if ((this.isTableNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isTableNameCompleted(this, new isTableNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isTableName_URL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isTableName_URL() {
            object[] results = this.Invoke("isTableName_URL", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isTableName_URLAsync() {
            this.isTableName_URLAsync(null);
        }
        
        /// <remarks/>
        public void isTableName_URLAsync(object userState) {
            if ((this.isTableName_URLOperationCompleted == null)) {
                this.isTableName_URLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisTableName_URLOperationCompleted);
            }
            this.InvokeAsync("isTableName_URL", new object[0], this.isTableName_URLOperationCompleted, userState);
        }
        
        private void OnisTableName_URLOperationCompleted(object arg) {
            if ((this.isTableName_URLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isTableName_URLCompleted(this, new isTableName_URLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/desTaskUrl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool desTaskUrl(string b) {
            object[] results = this.Invoke("desTaskUrl", new object[] {
                        b});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void desTaskUrlAsync(string b) {
            this.desTaskUrlAsync(b, null);
        }
        
        /// <remarks/>
        public void desTaskUrlAsync(string b, object userState) {
            if ((this.desTaskUrlOperationCompleted == null)) {
                this.desTaskUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OndesTaskUrlOperationCompleted);
            }
            this.InvokeAsync("desTaskUrl", new object[] {
                        b}, this.desTaskUrlOperationCompleted, userState);
        }
        
        private void OndesTaskUrlOperationCompleted(object arg) {
            if ((this.desTaskUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.desTaskUrlCompleted(this, new desTaskUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/desTaskTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool desTaskTask(string b) {
            object[] results = this.Invoke("desTaskTask", new object[] {
                        b});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void desTaskTaskAsync(string b) {
            this.desTaskTaskAsync(b, null);
        }
        
        /// <remarks/>
        public void desTaskTaskAsync(string b, object userState) {
            if ((this.desTaskTaskOperationCompleted == null)) {
                this.desTaskTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OndesTaskTaskOperationCompleted);
            }
            this.InvokeAsync("desTaskTask", new object[] {
                        b}, this.desTaskTaskOperationCompleted, userState);
        }
        
        private void OndesTaskTaskOperationCompleted(object arg) {
            if ((this.desTaskTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.desTaskTaskCompleted(this, new desTaskTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isHaveFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void isHaveFile(string fileNames, string pcName) {
            this.Invoke("isHaveFile", new object[] {
                        fileNames,
                        pcName});
        }
        
        /// <remarks/>
        public void isHaveFileAsync(string fileNames, string pcName) {
            this.isHaveFileAsync(fileNames, pcName, null);
        }
        
        /// <remarks/>
        public void isHaveFileAsync(string fileNames, string pcName, object userState) {
            if ((this.isHaveFileOperationCompleted == null)) {
                this.isHaveFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisHaveFileOperationCompleted);
            }
            this.InvokeAsync("isHaveFile", new object[] {
                        fileNames,
                        pcName}, this.isHaveFileOperationCompleted, userState);
        }
        
        private void OnisHaveFileOperationCompleted(object arg) {
            if ((this.isHaveFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isHaveFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServerFileLength", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetServerFileLength(string fileNames, string pcName) {
            object[] results = this.Invoke("GetServerFileLength", new object[] {
                        fileNames,
                        pcName});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerFileLengthAsync(string fileNames, string pcName) {
            this.GetServerFileLengthAsync(fileNames, pcName, null);
        }
        
        /// <remarks/>
        public void GetServerFileLengthAsync(string fileNames, string pcName, object userState) {
            if ((this.GetServerFileLengthOperationCompleted == null)) {
                this.GetServerFileLengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerFileLengthOperationCompleted);
            }
            this.InvokeAsync("GetServerFileLength", new object[] {
                        fileNames,
                        pcName}, this.GetServerFileLengthOperationCompleted, userState);
        }
        
        private void OnGetServerFileLengthOperationCompleted(object arg) {
            if ((this.GetServerFileLengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerFileLengthCompleted(this, new GetServerFileLengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveUpLoadFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveUpLoadFile(string fileName, long nposs, string pcName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] aa) {
            object[] results = this.Invoke("SaveUpLoadFile", new object[] {
                        fileName,
                        nposs,
                        pcName,
                        aa});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveUpLoadFileAsync(string fileName, long nposs, string pcName, byte[] aa) {
            this.SaveUpLoadFileAsync(fileName, nposs, pcName, aa, null);
        }
        
        /// <remarks/>
        public void SaveUpLoadFileAsync(string fileName, long nposs, string pcName, byte[] aa, object userState) {
            if ((this.SaveUpLoadFileOperationCompleted == null)) {
                this.SaveUpLoadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveUpLoadFileOperationCompleted);
            }
            this.InvokeAsync("SaveUpLoadFile", new object[] {
                        fileName,
                        nposs,
                        pcName,
                        aa}, this.SaveUpLoadFileOperationCompleted, userState);
        }
        
        private void OnSaveUpLoadFileOperationCompleted(object arg) {
            if ((this.SaveUpLoadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveUpLoadFileCompleted(this, new SaveUpLoadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FileInsert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FileInsert(string fileName, string pcName) {
            object[] results = this.Invoke("FileInsert", new object[] {
                        fileName,
                        pcName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FileInsertAsync(string fileName, string pcName) {
            this.FileInsertAsync(fileName, pcName, null);
        }
        
        /// <remarks/>
        public void FileInsertAsync(string fileName, string pcName, object userState) {
            if ((this.FileInsertOperationCompleted == null)) {
                this.FileInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFileInsertOperationCompleted);
            }
            this.InvokeAsync("FileInsert", new object[] {
                        fileName,
                        pcName}, this.FileInsertOperationCompleted, userState);
        }
        
        private void OnFileInsertOperationCompleted(object arg) {
            if ((this.FileInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FileInsertCompleted(this, new FileInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpLoadUrl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable UpLoadUrl(string taskPC, string urlTotal) {
            object[] results = this.Invoke("UpLoadUrl", new object[] {
                        taskPC,
                        urlTotal});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void UpLoadUrlAsync(string taskPC, string urlTotal) {
            this.UpLoadUrlAsync(taskPC, urlTotal, null);
        }
        
        /// <remarks/>
        public void UpLoadUrlAsync(string taskPC, string urlTotal, object userState) {
            if ((this.UpLoadUrlOperationCompleted == null)) {
                this.UpLoadUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpLoadUrlOperationCompleted);
            }
            this.InvokeAsync("UpLoadUrl", new object[] {
                        taskPC,
                        urlTotal}, this.UpLoadUrlOperationCompleted, userState);
        }
        
        private void OnUpLoadUrlOperationCompleted(object arg) {
            if ((this.UpLoadUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpLoadUrlCompleted(this, new UpLoadUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ECCrawlerOK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ECCrawlerOK(string clientName) {
            this.Invoke("ECCrawlerOK", new object[] {
                        clientName});
        }
        
        /// <remarks/>
        public void ECCrawlerOKAsync(string clientName) {
            this.ECCrawlerOKAsync(clientName, null);
        }
        
        /// <remarks/>
        public void ECCrawlerOKAsync(string clientName, object userState) {
            if ((this.ECCrawlerOKOperationCompleted == null)) {
                this.ECCrawlerOKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnECCrawlerOKOperationCompleted);
            }
            this.InvokeAsync("ECCrawlerOK", new object[] {
                        clientName}, this.ECCrawlerOKOperationCompleted, userState);
        }
        
        private void OnECCrawlerOKOperationCompleted(object arg) {
            if ((this.ECCrawlerOKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ECCrawlerOKCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ECCrawlerIS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ECCrawlerIS(string clientNameS_) {
            object[] results = this.Invoke("ECCrawlerIS", new object[] {
                        clientNameS_});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ECCrawlerISAsync(string clientNameS_) {
            this.ECCrawlerISAsync(clientNameS_, null);
        }
        
        /// <remarks/>
        public void ECCrawlerISAsync(string clientNameS_, object userState) {
            if ((this.ECCrawlerISOperationCompleted == null)) {
                this.ECCrawlerISOperationCompleted = new System.Threading.SendOrPostCallback(this.OnECCrawlerISOperationCompleted);
            }
            this.InvokeAsync("ECCrawlerIS", new object[] {
                        clientNameS_}, this.ECCrawlerISOperationCompleted, userState);
        }
        
        private void OnECCrawlerISOperationCompleted(object arg) {
            if ((this.ECCrawlerISCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ECCrawlerISCompleted(this, new ECCrawlerISCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ECCrawlerDel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ECCrawlerDel(string clientNameS_) {
            this.Invoke("ECCrawlerDel", new object[] {
                        clientNameS_});
        }
        
        /// <remarks/>
        public void ECCrawlerDelAsync(string clientNameS_) {
            this.ECCrawlerDelAsync(clientNameS_, null);
        }
        
        /// <remarks/>
        public void ECCrawlerDelAsync(string clientNameS_, object userState) {
            if ((this.ECCrawlerDelOperationCompleted == null)) {
                this.ECCrawlerDelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnECCrawlerDelOperationCompleted);
            }
            this.InvokeAsync("ECCrawlerDel", new object[] {
                        clientNameS_}, this.ECCrawlerDelOperationCompleted, userState);
        }
        
        private void OnECCrawlerDelOperationCompleted(object arg) {
            if ((this.ECCrawlerDelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ECCrawlerDelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ECUrlCrawlerOK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ECUrlCrawlerOK(string clientName) {
            this.Invoke("ECUrlCrawlerOK", new object[] {
                        clientName});
        }
        
        /// <remarks/>
        public void ECUrlCrawlerOKAsync(string clientName) {
            this.ECUrlCrawlerOKAsync(clientName, null);
        }
        
        /// <remarks/>
        public void ECUrlCrawlerOKAsync(string clientName, object userState) {
            if ((this.ECUrlCrawlerOKOperationCompleted == null)) {
                this.ECUrlCrawlerOKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnECUrlCrawlerOKOperationCompleted);
            }
            this.InvokeAsync("ECUrlCrawlerOK", new object[] {
                        clientName}, this.ECUrlCrawlerOKOperationCompleted, userState);
        }
        
        private void OnECUrlCrawlerOKOperationCompleted(object arg) {
            if ((this.ECUrlCrawlerOKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ECUrlCrawlerOKCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ECUrlCrawlerIS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ECUrlCrawlerIS() {
            object[] results = this.Invoke("ECUrlCrawlerIS", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ECUrlCrawlerISAsync() {
            this.ECUrlCrawlerISAsync(null);
        }
        
        /// <remarks/>
        public void ECUrlCrawlerISAsync(object userState) {
            if ((this.ECUrlCrawlerISOperationCompleted == null)) {
                this.ECUrlCrawlerISOperationCompleted = new System.Threading.SendOrPostCallback(this.OnECUrlCrawlerISOperationCompleted);
            }
            this.InvokeAsync("ECUrlCrawlerIS", new object[0], this.ECUrlCrawlerISOperationCompleted, userState);
        }
        
        private void OnECUrlCrawlerISOperationCompleted(object arg) {
            if ((this.ECUrlCrawlerISCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ECUrlCrawlerISCompleted(this, new ECUrlCrawlerISCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ECUrlCrawlerDel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ECUrlCrawlerDel() {
            this.Invoke("ECUrlCrawlerDel", new object[0]);
        }
        
        /// <remarks/>
        public void ECUrlCrawlerDelAsync() {
            this.ECUrlCrawlerDelAsync(null);
        }
        
        /// <remarks/>
        public void ECUrlCrawlerDelAsync(object userState) {
            if ((this.ECUrlCrawlerDelOperationCompleted == null)) {
                this.ECUrlCrawlerDelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnECUrlCrawlerDelOperationCompleted);
            }
            this.InvokeAsync("ECUrlCrawlerDel", new object[0], this.ECUrlCrawlerDelOperationCompleted, userState);
        }
        
        private void OnECUrlCrawlerDelOperationCompleted(object arg) {
            if ((this.ECUrlCrawlerDelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ECUrlCrawlerDelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ECCrawlerINIT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ECCrawlerINIT() {
            this.Invoke("ECCrawlerINIT", new object[0]);
        }
        
        /// <remarks/>
        public void ECCrawlerINITAsync() {
            this.ECCrawlerINITAsync(null);
        }
        
        /// <remarks/>
        public void ECCrawlerINITAsync(object userState) {
            if ((this.ECCrawlerINITOperationCompleted == null)) {
                this.ECCrawlerINITOperationCompleted = new System.Threading.SendOrPostCallback(this.OnECCrawlerINITOperationCompleted);
            }
            this.InvokeAsync("ECCrawlerINIT", new object[0], this.ECCrawlerINITOperationCompleted, userState);
        }
        
        private void OnECCrawlerINITOperationCompleted(object arg) {
            if ((this.ECCrawlerINITCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ECCrawlerINITCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServerFileLength_Pic", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetServerFileLength_Pic(string fileNames) {
            object[] results = this.Invoke("GetServerFileLength_Pic", new object[] {
                        fileNames});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerFileLength_PicAsync(string fileNames) {
            this.GetServerFileLength_PicAsync(fileNames, null);
        }
        
        /// <remarks/>
        public void GetServerFileLength_PicAsync(string fileNames, object userState) {
            if ((this.GetServerFileLength_PicOperationCompleted == null)) {
                this.GetServerFileLength_PicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerFileLength_PicOperationCompleted);
            }
            this.InvokeAsync("GetServerFileLength_Pic", new object[] {
                        fileNames}, this.GetServerFileLength_PicOperationCompleted, userState);
        }
        
        private void OnGetServerFileLength_PicOperationCompleted(object arg) {
            if ((this.GetServerFileLength_PicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerFileLength_PicCompleted(this, new GetServerFileLength_PicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveUpLoadFile_Pic", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveUpLoadFile_Pic(string fileNames, long nposs, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] aa) {
            object[] results = this.Invoke("SaveUpLoadFile_Pic", new object[] {
                        fileNames,
                        nposs,
                        aa});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveUpLoadFile_PicAsync(string fileNames, long nposs, byte[] aa) {
            this.SaveUpLoadFile_PicAsync(fileNames, nposs, aa, null);
        }
        
        /// <remarks/>
        public void SaveUpLoadFile_PicAsync(string fileNames, long nposs, byte[] aa, object userState) {
            if ((this.SaveUpLoadFile_PicOperationCompleted == null)) {
                this.SaveUpLoadFile_PicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveUpLoadFile_PicOperationCompleted);
            }
            this.InvokeAsync("SaveUpLoadFile_Pic", new object[] {
                        fileNames,
                        nposs,
                        aa}, this.SaveUpLoadFile_PicOperationCompleted, userState);
        }
        
        private void OnSaveUpLoadFile_PicOperationCompleted(object arg) {
            if ((this.SaveUpLoadFile_PicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveUpLoadFile_PicCompleted(this, new SaveUpLoadFile_PicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/jyRar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int jyRar(string rarName, string jyPath) {
            object[] results = this.Invoke("jyRar", new object[] {
                        rarName,
                        jyPath});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void jyRarAsync(string rarName, string jyPath) {
            this.jyRarAsync(rarName, jyPath, null);
        }
        
        /// <remarks/>
        public void jyRarAsync(string rarName, string jyPath, object userState) {
            if ((this.jyRarOperationCompleted == null)) {
                this.jyRarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnjyRarOperationCompleted);
            }
            this.InvokeAsync("jyRar", new object[] {
                        rarName,
                        jyPath}, this.jyRarOperationCompleted, userState);
        }
        
        private void OnjyRarOperationCompleted(object arg) {
            if ((this.jyRarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.jyRarCompleted(this, new jyRarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void selectDatasCompletedEventHandler(object sender, selectDatasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectDatasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectDatasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void isDuZhanCompletedEventHandler(object sender, isDuZhanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isDuZhanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isDuZhanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ExecuteSqlTranCompletedEventHandler(object sender, ExecuteSqlTranCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteSqlTranCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteSqlTranCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void isTableNameCompletedEventHandler(object sender, isTableNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isTableNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isTableNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void isTableName_URLCompletedEventHandler(object sender, isTableName_URLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isTableName_URLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isTableName_URLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void desTaskUrlCompletedEventHandler(object sender, desTaskUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class desTaskUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal desTaskUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void desTaskTaskCompletedEventHandler(object sender, desTaskTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class desTaskTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal desTaskTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void isHaveFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetServerFileLengthCompletedEventHandler(object sender, GetServerFileLengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerFileLengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerFileLengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveUpLoadFileCompletedEventHandler(object sender, SaveUpLoadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveUpLoadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveUpLoadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void FileInsertCompletedEventHandler(object sender, FileInsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileInsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FileInsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpLoadUrlCompletedEventHandler(object sender, UpLoadUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpLoadUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpLoadUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ECCrawlerOKCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ECCrawlerISCompletedEventHandler(object sender, ECCrawlerISCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ECCrawlerISCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ECCrawlerISCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ECCrawlerDelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ECUrlCrawlerOKCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ECUrlCrawlerISCompletedEventHandler(object sender, ECUrlCrawlerISCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ECUrlCrawlerISCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ECUrlCrawlerISCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ECUrlCrawlerDelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ECCrawlerINITCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetServerFileLength_PicCompletedEventHandler(object sender, GetServerFileLength_PicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerFileLength_PicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerFileLength_PicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveUpLoadFile_PicCompletedEventHandler(object sender, SaveUpLoadFile_PicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveUpLoadFile_PicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveUpLoadFile_PicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void jyRarCompletedEventHandler(object sender, jyRarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class jyRarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal jyRarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591